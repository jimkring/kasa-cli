name: Build Windows EXE

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  Build-Windows-EXE:
    runs-on: windows-2019
    steps:
      
      - name: Check out repository
        uses: actions/checkout@v3
      
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements.txt -r requirements-dev.txt
        
      - name: Cache Nuitka dependencies
        uses: actions/cache@v1
        with:
          path: C:\Users\runneradmin\AppData\Local\Nuitka
          key: ${{ runner.OS }}-nuitka-cache-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.OS }}-nuitka-cache-

      - name: Build EXE
        run: |
          yes | python -m nuitka `
          --report=compilation_report.xml
          --standalone `
          --onefile `
          --enable-plugin=anti-bloat `
          --nofollow-import-to=pytest `
          --nofollow-import-to=zipp `
          --nofollow-import-to=colorama `
          --nofollow-import-to=setuptools `
          --nofollow-import-to=distutils `
          --nofollow-import-to=cryptography `
          --output-dir="build" `
          --low-memory `
          --jobs=1 `
          --lto=yes `
          kasa_cli

      - name: Upload Compilation Report
        uses: actions/upload-artifact@v3
        with:
          name: Compilation Report
          path: compilation_report.xml

      - name: Upload EXE Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Windows EXE
          path: build/*.exe
          
